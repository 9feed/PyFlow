{"root": {"nodes": [{"inputs": [{"direction": 0, "bDirty": false, "name": "entity", "dataType": 2, "value": "5", "bLabelHidden": false, "uuid": "0cb3ac63-0a46-4339-ac04-9e2c6550e763"}, {"direction": 0, "bDirty": false, "name": "inExec", "dataType": 5, "value": null, "bLabelHidden": true, "uuid": "b9e1591d-5c8c-45ce-b398-578ea1dd2e2b"}], "meta": {"var": {}, "label": "pyprint"}, "name": "pyprint", "outputs": [{"direction": 1, "bDirty": false, "name": "outExec", "dataType": 5, "value": null, "bLabelHidden": true, "uuid": "5cb5be5f-9f8e-4f25-b078-f6a16c19fb08"}], "y": 4608.0, "x": 5090.0, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "pyprint", "uuid": "f3984502-e0cf-4657-a154-b8c224ad4c03"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "i", "dataType": 1, "value": 6, "bLabelHidden": false, "uuid": "0a05a8da-ebde-47ab-86c7-e58f43d6f8da"}], "meta": {"var": {}, "label": "intToString"}, "name": "intToString", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 2, "value": "5", "bLabelHidden": false, "uuid": "7cecc108-5a90-4a8f-92b2-99fa4f8ca731"}], "y": 4778.0, "x": 4890.0, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "intToString", "uuid": "c947ed52-b438-478e-a9c3-8e78f9610308"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "inp", "dataType": 5, "value": null, "bLabelHidden": false, "uuid": "258f2d97-b288-4540-b86d-0b93fc916a29"}, {"direction": 0, "bDirty": false, "name": "uuid", "dataType": 2, "value": "edd3d8a5-c0ec-4e56-aa27-71efd1b1872f", "bLabelHidden": false, "uuid": "d8c49946-2166-4ab2-820b-47231920c042"}], "meta": {"var": {}, "label": "implicitPinCall"}, "name": "implicitPinCall", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 5, "value": null, "bLabelHidden": false, "uuid": "63778a1e-abc3-44ff-896b-df5aa80e190f"}], "y": 4978.0, "x": 5070.0, "computeCode": "def compute(self):\n    uidStr = self.uidInp.getData()\n    if len(uidStr) == 0:\n        return\n    uid = uuid.UUID(uidStr)\n    if uid in self.graph().pins:\n        pin = self.graph().pins[uid]\n        if not pin.hasConnections():\n            pin.call()\n", "type": "implicitPinCall", "uuid": "8ab3dae6-c61e-48fd-8b57-9ecf169c6e15"}, {"inputs": [], "meta": {"var": {}, "deltaTime": 0.2, "label": "call"}, "name": "call", "outputs": [{"direction": 1, "bDirty": false, "name": "OUT", "dataType": 5, "value": null, "bLabelHidden": false, "uuid": "47c4794a-24ee-4147-b192-53a7bff6b632"}], "y": 4648.0, "x": 4400.0, "computeCode": "def compute(self):\n    self.out.call()\n", "type": "call", "uuid": "ae5ae021-3a31-4137-aa5c-84be1af345b5"}, {"inputs": [], "meta": {"var": {}, "commentNode": {"color": [0, 0, 0, 80], "h": 202.0, "labelHeight": 128.0, "w": 164.0, "text": "This node will call execution pin by uuid.\nIn this case we call break pin of the forLoopWithBreak node.\n\nRight click->FindPin\nto center on."}, "label": "This node will call execution pin by uuid.\nIn this case we call break pin of the forLoopWithBreak node.\n\nRight click->FindPin\nto center on."}, "name": "commentNode", "outputs": [], "y": 4828.0, "x": 5050.0, "computeCode": "def compute(self):\n    '''\n    node calculations here\n    '''\n    # getting data from inputs\n    # do stuff\n    # write data to outputs\n    return\n", "type": "commentNode", "uuid": "7ed51957-74de-4b69-bc65-fbcdb2159799"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "a", "dataType": 1, "value": 6, "bLabelHidden": false, "uuid": "7f15cbab-a268-4a0b-97cf-b6470bbdaa68"}, {"direction": 0, "bDirty": false, "name": "b", "dataType": 1, "value": 6, "bLabelHidden": false, "uuid": "c976d193-715e-4b37-94dd-53b7841eee4d"}], "meta": {"var": {}, "label": "intless"}, "name": "intless", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 3, "value": false, "bLabelHidden": false, "uuid": "6b08d41d-6394-4b52-8b73-572032be17b7"}], "y": 4598.0, "x": 4740.0, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "intless", "uuid": "86084f37-92e6-478f-aa83-b21d78dd7690"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "inExec", "dataType": 5, "value": null, "bLabelHidden": true, "uuid": "d7e24ac2-fd98-41ea-9a8a-395763e2c79f"}, {"direction": 0, "bDirty": false, "name": "start", "dataType": 1, "value": 0, "bLabelHidden": false, "uuid": "9e1aea6b-90ff-459f-85c5-f56d7c6bfbe5"}, {"direction": 0, "bDirty": false, "name": "stop1", "dataType": 1, "value": 10, "bLabelHidden": false, "uuid": "a19c196e-86a3-4712-bf65-b2ed34eaa493"}, {"direction": 0, "bDirty": false, "name": "step", "dataType": 1, "value": 1, "bLabelHidden": false, "uuid": "ee0a1232-10e4-4b2e-8e41-90290d2378e7"}, {"direction": 0, "bDirty": false, "name": "break1", "dataType": 5, "value": null, "bLabelHidden": false, "uuid": "edd3d8a5-c0ec-4e56-aa27-71efd1b1872f"}], "meta": {"var": {}, "label": "forLoopWithBreak"}, "name": "forLoopWithBreak", "outputs": [{"direction": 1, "bDirty": false, "name": "LoopBody", "dataType": 5, "value": null, "bLabelHidden": false, "uuid": "04a8e36f-f316-46b4-8c7f-b70289c8bc6a"}, {"direction": 1, "bDirty": false, "name": "Index", "dataType": 1, "value": 6, "bLabelHidden": false, "uuid": "af153ce0-ec46-4824-94f8-cca55b3fcff6"}, {"direction": 1, "bDirty": false, "name": "Completed", "dataType": 5, "value": null, "bLabelHidden": false, "uuid": "b2bd9cf7-ea97-4f00-9a7b-a1457ffa1adb"}], "y": 4648.0, "x": 4560.0, "computeCode": "def compute(self):\n    indexFrom = self.firstIndex.getData()\n    indexTo = self.lastIndex.getData()\n    step = self.step.getData()\n    for i in range(indexFrom, indexTo, step):\n        if self.stop:\n            break\n        self.index.setData(i)\n        self.loopBody.call()\n    self.completed.call()\n    self.stop = False\n", "type": "forLoopWithBreak", "uuid": "2bf04227-100c-4c3a-a89e-09bc5142efbd"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "entity", "dataType": 2, "value": "done", "bLabelHidden": false, "uuid": "45521120-0467-405c-93e1-29925539ec78"}, {"direction": 0, "bDirty": false, "name": "inExec", "dataType": 5, "value": null, "bLabelHidden": true, "uuid": "ff519d4b-6d51-4f47-a9d2-2f0e009091d3"}], "meta": {"var": {}, "label": "pyprint"}, "name": "pyprint1", "outputs": [{"direction": 1, "bDirty": false, "name": "outExec", "dataType": 5, "value": null, "bLabelHidden": true, "uuid": "58695ce4-0528-4b22-9d24-7a7443ac4d8e"}], "y": 4838.0, "x": 4750.0, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "pyprint", "uuid": "8b6374f8-7285-42a9-8e90-fdc51ed486d7"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "In", "dataType": 5, "value": null, "bLabelHidden": false, "uuid": "1801482a-9f52-4201-85ed-017336040f8d"}, {"direction": 0, "bDirty": false, "name": "condition", "dataType": 3, "value": false, "bLabelHidden": false, "uuid": "d359ef5d-1558-4b9f-9dd8-c7cf298656c8"}], "meta": {"var": {}, "label": "branch"}, "name": "branch", "outputs": [{"direction": 1, "bDirty": false, "name": "True", "dataType": 5, "value": null, "bLabelHidden": false, "uuid": "37f6a0c7-ff28-4084-9a52-31a9fd69c50e"}, {"direction": 1, "bDirty": false, "name": "False", "dataType": 5, "value": null, "bLabelHidden": false, "uuid": "aa4d13e9-05de-4707-9d12-24431dc4f827"}], "y": 4648.0, "x": 4860.0, "computeCode": "def compute(self):\n    data = self.condition.getData()\n    if data:\n        self.trueExec.call()\n    else:\n        self.falseExec.call()\n", "type": "branch", "uuid": "9a144787-ce91-47be-80c8-172b93c541ad"}], "edges": [{"sourceName": "forLoopWithBreak.LoopBody", "sourceUUID": "04a8e36f-f316-46b4-8c7f-b70289c8bc6a", "destinationName": "branch.In", "destinationUUID": "1801482a-9f52-4201-85ed-017336040f8d", "uuid": "a42635e1-2189-4d1a-863b-c9ce42a62d39"}, {"sourceName": "forLoopWithBreak.Index", "sourceUUID": "af153ce0-ec46-4824-94f8-cca55b3fcff6", "destinationName": "intless.a", "destinationUUID": "7f15cbab-a268-4a0b-97cf-b6470bbdaa68", "uuid": "09efbd2b-0d4f-488b-8883-050a5ffc23c9"}, {"sourceName": "intless.out", "sourceUUID": "6b08d41d-6394-4b52-8b73-572032be17b7", "destinationName": "branch.condition", "destinationUUID": "d359ef5d-1558-4b9f-9dd8-c7cf298656c8", "uuid": "fba99a67-37e0-457a-ac02-b14cfbea07de"}, {"sourceName": "branch.True", "sourceUUID": "37f6a0c7-ff28-4084-9a52-31a9fd69c50e", "destinationName": "pyprint.inExec", "destinationUUID": "b9e1591d-5c8c-45ce-b398-578ea1dd2e2b", "uuid": "441b17ec-516c-4322-8543-23048d13c03d"}, {"sourceName": "intToString.out", "sourceUUID": "7cecc108-5a90-4a8f-92b2-99fa4f8ca731", "destinationName": "pyprint.entity", "destinationUUID": "0cb3ac63-0a46-4339-ac04-9e2c6550e763", "uuid": "431dae05-2831-475e-8465-8a63c421b1cd"}, {"sourceName": "forLoopWithBreak.Index", "sourceUUID": "af153ce0-ec46-4824-94f8-cca55b3fcff6", "destinationName": "intToString.i", "destinationUUID": "0a05a8da-ebde-47ab-86c7-e58f43d6f8da", "uuid": "506be276-ca1e-40bc-b140-baa0ec16a7ca"}, {"sourceName": "branch.False", "sourceUUID": "aa4d13e9-05de-4707-9d12-24431dc4f827", "destinationName": "implicitPinCall.inp", "destinationUUID": "258f2d97-b288-4540-b86d-0b93fc916a29", "uuid": "430bbb15-3c78-494e-9d5f-3e0a77ff8e36"}, {"sourceName": "call.OUT", "sourceUUID": "47c4794a-24ee-4147-b192-53a7bff6b632", "destinationName": "forLoopWithBreak.inExec", "destinationUUID": "d7e24ac2-fd98-41ea-9a8a-395763e2c79f", "uuid": "a685c691-5b5a-4113-b132-7b7f06836781"}, {"sourceName": "forLoopWithBreak.Completed", "sourceUUID": "b2bd9cf7-ea97-4f00-9a7b-a1457ffa1adb", "destinationName": "pyprint1.inExec", "destinationUUID": "ff519d4b-6d51-4f47-a9d2-2f0e009091d3", "uuid": "227e5bfd-b8be-4596-80d2-7c668419bcb7"}], "variables": []}}