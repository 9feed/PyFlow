{"root": {"nodes": [{"inputs": [], "meta": {"var": {}, "commentNode": {"color": [170, 255, 0, 80], "h": 142.0, "labelHeight": 20.0, "w": 252.0, "text": "Copies of array passed"}, "label": "Copies of array passed"}, "name": "CommentNode", "outputs": [], "y": 4888.0, "x": 4900.0, "computeCode": "def compute(self):\n    '''\n    node calculations here\n    '''\n    # getting data from inputs\n    # do stuff\n    # write data to outputs\n    return\n", "type": "CommentNode", "uuid": "0ac924c8-4631-422d-b782-6b59cfdd4175"}, {"inputs": [{"bDirty": true, "name": "start", "dataType": 1, "type": 0, "value": -10, "bLabelHidden": false, "uuid": "96120ae3-6a07-4e2b-8414-890727224ed8"}, {"bDirty": false, "name": "end", "dataType": 1, "type": 0, "value": 10, "bLabelHidden": false, "uuid": "d001921d-16ea-49d5-ac26-4e2477039607"}], "meta": {"var": {}, "label": "randint"}, "name": "randint", "outputs": [{"bDirty": true, "name": "Result", "dataType": 1, "type": 1, "value": -8, "bLabelHidden": false, "uuid": "ee3c741c-99e2-4deb-ade8-a656e6abecb8"}], "y": 5088.0, "x": 4230.0, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "randint", "uuid": "3f348037-8474-406e-90f4-b4656ac6b63b"}, {"inputs": [{"bDirty": true, "name": "in1", "dataType": 3, "type": 0, "value": true, "bLabelHidden": true, "uuid": "9f9783fb-7f72-4a79-a836-6227dffa25bf"}], "meta": {"var": {}, "label": "BoolNode"}, "name": "BoolNode", "outputs": [{"bDirty": true, "name": "out", "dataType": 3, "type": 1, "value": true, "bLabelHidden": true, "uuid": "d08772d8-a57d-4ca7-a517-3ff60901cc5c"}], "y": 4918.0, "x": 4670.0, "computeCode": "def compute(self):\n    self.output.setData(self.input.getData())\n", "type": "BoolNode", "uuid": "e5b38f9a-ce1b-4213-bf5f-40540e1378ee"}, {"inputs": [{"bDirty": true, "name": "in1", "dataType": 5, "type": 0, "value": [true, false, -7], "bLabelHidden": true, "uuid": "793c2ec3-683a-4ccc-be97-f02251bf67f8"}], "meta": {"var": {}, "label": "ToString"}, "name": "ToString", "outputs": [{"bDirty": true, "name": "out", "dataType": 2, "type": 1, "value": "[True, False, -7]", "bLabelHidden": true, "uuid": "2519ed46-7bce-4e88-9d20-6ae7443e982a"}], "y": 5088.0, "x": 5060.0, "computeCode": "def compute(self):\n    out_data = self.in_data.getData()\n    try:\n        self.out_data.setData(str(out_data))\n    except Exception, e:\n        print e\n", "type": "ToString", "uuid": "a498e0be-2b4a-4541-9f24-ec9541d44233"}, {"inputs": [{"bDirty": true, "name": "input", "dataType": 5, "type": 0, "value": [true, false, -7], "bLabelHidden": false, "uuid": "06b7ab14-a75f-43f1-8087-b4bc5d8c296e"}], "meta": {"var": {}, "label": "RequestNode"}, "name": "RequestNode", "outputs": [], "y": 5138.0, "x": 4940.0, "computeCode": "def compute(self):\n    # check if any dirty nodes before connected Pin.\n    # randint for example\n    # if so push forward and recompute\n    behind_dirty_ports = [p for p in findPinsBehind(self.input) if p.dirty is True]\n    shouldRecalc = (not len(behind_dirty_ports) == 0)\n    if shouldRecalc:\n        # push from dirty ports\n        # request data\n        for p in behind_dirty_ports:\n            push(p)\n    data = self.input.getData()\n    self.graph().writeToConsole(str(data))\n    print(str(data))\n", "type": "RequestNode", "uuid": "fe0536e6-6e54-4a2e-b1c4-c1aada3d81c9"}, {"inputs": [{"bDirty": false, "name": "execIn", "dataType": 6, "type": 0, "value": null, "bLabelHidden": true, "uuid": "3be5a3a3-7d36-424b-af3e-5379259a9e87"}, {"bDirty": true, "name": "inArray", "dataType": 4, "type": 0, "value": [true, false, -7], "bLabelHidden": false, "uuid": "dde9469b-c842-4931-8c46-d9633a632f32"}, {"bDirty": false, "name": "element", "dataType": 5, "type": 0, "value": 6, "bLabelHidden": false, "uuid": "1b97cc2b-1e5a-4de2-94c1-0cedef1930c6"}], "meta": {"var": {}, "label": "ArrayAppend"}, "name": "ArrayAppend", "outputs": [{"bDirty": false, "name": "execOut", "dataType": 6, "type": 1, "value": null, "bLabelHidden": true, "uuid": "98a829f6-b6fd-4693-a17a-409cbb5d18e0"}, {"bDirty": true, "name": "out", "dataType": 1, "type": 1, "value": 3, "bLabelHidden": false, "uuid": "c8f1ca32-1a09-4c81-928b-737110451fd9"}, {"bDirty": true, "name": "result", "dataType": 3, "type": 1, "value": true, "bLabelHidden": false, "uuid": "edb098e6-6924-4bc8-88b5-4c0c0394de20"}], "y": 4918.0, "x": 4990.0, "computeCode": "def compute(self):\n    try:\n        element = self.element.getData()\n        if len(self.in_arr.edge_list) == 0:\n            self.newItemIndex.setClean()\n            self.out_result.setClean()\n            self.outExec.call()\n            return\n        in_arr = self.in_arr.getData()\n        in_arr.append(element)\n        self.newItemIndex.setData(len(in_arr) - 1)\n        self.out_result.setData(True)\n    except Exception as e:\n        self.out_result.setData(False)\n        print(e)\n    self.outExec.call()\n", "type": "ArrayAppend", "uuid": "257b6c6d-f86f-4177-9504-6722478028a3"}, {"inputs": [{"bDirty": true, "name": "A", "dataType": 1, "type": 0, "value": -8, "bLabelHidden": false, "uuid": "5cec335f-0cd8-4848-92d6-8fed3a967f6d"}, {"bDirty": true, "name": "B", "dataType": 1, "type": 0, "value": 1, "bLabelHidden": false, "uuid": "f6860b38-ad2b-46ef-9cd0-8c4ea57196f1"}], "meta": {"var": {}, "label": "add"}, "name": "add", "outputs": [{"bDirty": true, "name": "out", "dataType": 1, "type": 1, "value": -7, "bLabelHidden": false, "uuid": "ab268dfe-6197-4610-bc82-10ebf73244bc"}], "y": 5088.0, "x": 4480.0, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "add", "uuid": "533eab6e-0413-431d-ab96-1b11112b2750"}, {"inputs": [], "meta": {"var": {}, "deltaTime": 0.2, "label": "Call"}, "name": "Call", "outputs": [{"bDirty": false, "name": "OUT", "dataType": 6, "type": 1, "value": null, "bLabelHidden": false, "uuid": "0eacc87e-6797-4aa6-ba4b-207cd95f705c"}], "y": 4768.0, "x": 4690.0, "computeCode": "def compute(self):\n    self.out.call()\n", "type": "Call", "uuid": "4dfe772d-fab5-454f-a274-20599fd8f8fa"}, {"inputs": [{"bDirty": true, "name": "0", "dataType": 5, "type": 0, "value": true, "bLabelHidden": false, "uuid": "6a4df754-c4ec-4acf-ae27-5e420d17916c"}, {"bDirty": true, "name": "1", "dataType": 5, "type": 0, "value": false, "bLabelHidden": false, "uuid": "3e2bf916-f80b-4795-939d-62fb79798a23"}, {"bDirty": true, "name": "2", "dataType": 5, "type": 0, "value": -7, "bLabelHidden": false, "uuid": "0ae9e6b3-bf0e-41e3-bc6c-faf5f3f1da54"}], "meta": {"var": {}, "label": "MakeConstArray"}, "name": "MakeConstArray", "outputs": [{"bDirty": true, "name": "out", "dataType": 4, "type": 1, "value": [true, false, -7], "bLabelHidden": false, "uuid": "9487110d-7721-4ebb-a563-c38602aee711"}], "y": 4968.0, "x": 4780.0, "computeCode": "def compute(self):\n    self.out_arr.setData(list([i.getData() for i in self.inputs.values()]))\n    push(self.out_arr)\n", "type": "MakeConstArray", "uuid": "cfa5e896-c6d5-4cd0-9075-72c958680901"}, {"inputs": [{"bDirty": false, "name": "in1", "dataType": 6, "type": 0, "value": null, "bLabelHidden": true, "uuid": "c46dacac-62a8-4ef7-8261-f92d668d621d"}, {"bDirty": true, "name": "string", "dataType": 2, "type": 0, "value": "[True, False, -7]", "bLabelHidden": false, "uuid": "3abadf97-319a-4b97-be9e-d1e198658b6b"}], "meta": {"var": {}, "label": "Print"}, "name": "Print", "outputs": [{"bDirty": false, "name": "out", "dataType": 6, "type": 1, "value": null, "bLabelHidden": true, "uuid": "9582bab7-bdb1-4887-a271-50689901f947"}], "y": 5038.0, "x": 5280.0, "computeCode": "def compute(self):\n    if self.inExec.hasConnections():\n        data = self.obj.getData()\n        self.graph().writeToConsole(data)\n    self.outExec.call()\n", "type": "Print", "uuid": "6af57f0d-d02b-4efe-8ef8-30fa730b21ec"}, {"inputs": [], "meta": {"var": {}, "commentNode": {"color": [0, 0, 0, 80], "h": 112.0, "labelHeight": 32.0, "w": 210.0, "text": "This node produces new data every frame, and pushes dirty flag up the tree"}, "label": "This node produces new data every frame, and pushes dirty flag up the tree"}, "name": "CommentNode1", "outputs": [], "y": 5038.0, "x": 4200.0, "computeCode": "def compute(self):\n    '''\n    node calculations here\n    '''\n    # getting data from inputs\n    # do stuff\n    # write data to outputs\n    return\n", "type": "CommentNode", "uuid": "e2cfd577-7b98-4e39-a140-69afce9e6874"}, {"inputs": [{"bDirty": true, "name": "in1", "dataType": 3, "type": 0, "value": false, "bLabelHidden": true, "uuid": "d6d3e7f7-43f5-4777-b688-7e0d70af8803"}], "meta": {"var": {}, "label": "BoolNode"}, "name": "BoolNode1", "outputs": [{"bDirty": true, "name": "out", "dataType": 3, "type": 1, "value": false, "bLabelHidden": true, "uuid": "b5e7e232-8955-4ede-ad4b-86c8bbb18cd1"}], "y": 4978.0, "x": 4670.0, "computeCode": "def compute(self):\n    self.output.setData(self.input.getData())\n", "type": "BoolNode", "uuid": "da57b40f-ffdc-4cbf-83f6-64eb9912de42"}], "edges": [{"sourceName": "MakeConstArray.out", "sourceUUID": "9487110d-7721-4ebb-a563-c38602aee711", "destinationName": "RequestNode.input", "destinationUUID": "06b7ab14-a75f-43f1-8087-b4bc5d8c296e", "uuid": "382800c6-c640-4c64-a6dc-68698bc00a4c"}, {"sourceName": "BoolNode.out", "sourceUUID": "d08772d8-a57d-4ca7-a517-3ff60901cc5c", "destinationName": "MakeConstArray.0", "destinationUUID": "6a4df754-c4ec-4acf-ae27-5e420d17916c", "uuid": "2ad1feb6-1007-4c05-9e9c-43bab6e5756e"}, {"sourceName": "Call.OUT", "sourceUUID": "0eacc87e-6797-4aa6-ba4b-207cd95f705c", "destinationName": "ArrayAppend.execIn", "destinationUUID": "3be5a3a3-7d36-424b-af3e-5379259a9e87", "uuid": "0edfa44e-2dca-417a-a5bf-c63c52b2bc01"}, {"sourceName": "MakeConstArray.out", "sourceUUID": "9487110d-7721-4ebb-a563-c38602aee711", "destinationName": "ArrayAppend.inArray", "destinationUUID": "dde9469b-c842-4931-8c46-d9633a632f32", "uuid": "5d5db9b0-5f8e-4e2d-ab08-975bcbf9f9cc"}, {"sourceName": "randint.Result", "sourceUUID": "ee3c741c-99e2-4deb-ade8-a656e6abecb8", "destinationName": "add.A", "destinationUUID": "5cec335f-0cd8-4848-92d6-8fed3a967f6d", "uuid": "a0238405-5167-4f25-b6b4-cef46b333a88"}, {"sourceName": "BoolNode1.out", "sourceUUID": "b5e7e232-8955-4ede-ad4b-86c8bbb18cd1", "destinationName": "MakeConstArray.1", "destinationUUID": "3e2bf916-f80b-4795-939d-62fb79798a23", "uuid": "c21e3992-0779-4da9-a40b-0dc912b3ad45"}, {"sourceName": "add.out", "sourceUUID": "ab268dfe-6197-4610-bc82-10ebf73244bc", "destinationName": "MakeConstArray.2", "destinationUUID": "0ae9e6b3-bf0e-41e3-bc6c-faf5f3f1da54", "uuid": "1e33b532-0a0e-45e7-bfa5-55754b3f2b84"}, {"sourceName": "ToString.out", "sourceUUID": "2519ed46-7bce-4e88-9d20-6ae7443e982a", "destinationName": "Print.string", "destinationUUID": "3abadf97-319a-4b97-be9e-d1e198658b6b", "uuid": "510e6d06-b8ad-41f0-b394-6d7e4ed0b910"}, {"sourceName": "MakeConstArray.out", "sourceUUID": "9487110d-7721-4ebb-a563-c38602aee711", "destinationName": "ToString.in1", "destinationUUID": "793c2ec3-683a-4ccc-be97-f02251bf67f8", "uuid": "855df9c8-961e-420a-9cc3-2e7073ed20d7"}, {"sourceName": "ArrayAppend.execOut", "sourceUUID": "98a829f6-b6fd-4693-a17a-409cbb5d18e0", "destinationName": "Print.in1", "destinationUUID": "c46dacac-62a8-4ef7-8261-f92d668d621d", "uuid": "e25584aa-68ff-43e5-95d2-8ee2bbceebc9"}], "variables": []}}