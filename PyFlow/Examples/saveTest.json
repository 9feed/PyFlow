{"root": {"nodes": [{"inputs": [{"name": "0", "dataType": 5, "type": 0, "value": 0.0, "bLabelHidden": false, "uuid": "104a5aa6-0077-4c8d-b661-758e0d6ec6d4"}], "meta": {}, "name": "MakeArray", "outputs": [{"name": "out", "dataType": 4, "type": 1, "value": [], "bLabelHidden": false, "uuid": "e6e09808-889b-483e-abb2-d012f04093ea"}], "y": 4788.0, "x": 4940.0, "computeCode": ["    def compute(self):\n", "        self.out_arr.setData(list([i.getData() for i in self.inputs]))\n"], "type": "MakeArray", "uuid": "3af62af3-57ad-407f-be1a-4ba5245f2b19"}, {"inputs": [{"name": "x", "dataType": 0, "type": 0, "value": 0.0, "bLabelHidden": false, "uuid": "668c7de8-b01e-401b-829b-79b75efd300f"}], "meta": {}, "name": "sin", "outputs": [{"name": "out", "dataType": 0, "type": 1, "value": 0.0, "bLabelHidden": false, "uuid": "dd513cac-e83e-4760-8639-e7f92098d615"}], "y": 4788.0, "x": 4720.0, "computeCode": ["        def compute(self):\n", "            # arguments will be taken from inputs\n", "            kwargs = {}\n", "            for i in self.inputs:\n", "                if i.dataType is not DataTypes.Exec:\n", "                    kwargs[i.name] = i.getData()\n", "            for ref in refs:\n", "                if ref.dataType is not DataTypes.Exec:\n", "                    kwargs[ref.name] = ref\n", "            result = foo(**kwargs)\n", "            if returnType is not None:\n", "                self.setData('out', result)\n", "            if nodeType == NodeTypes.Callable:\n", "                outExec.call()\n"], "type": "sin", "uuid": "6ea2c424-49a8-40b8-bbc7-4b32fac8c5ab"}], "edges": [{"sourceName": "sin.out", "sourceUUID": "dd513cac-e83e-4760-8639-e7f92098d615", "destinationName": "MakeArray.0", "destinationUUID": "104a5aa6-0077-4c8d-b661-758e0d6ec6d4"}]}}