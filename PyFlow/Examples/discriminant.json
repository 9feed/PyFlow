{"root": {"nodes": [{"inputs": [{"direction": 0, "bDirty": false, "name": "a", "dataType": 0, "value": 54.0, "bLabelHidden": false, "uuid": "35f7a651-c6be-48cc-9383-6aa7b540ea7c"}, {"direction": 0, "bDirty": false, "name": "b", "dataType": 0, "value": 4.0, "bLabelHidden": false, "uuid": "ccecf5b0-f2cf-4cb7-a6eb-f9d243f5c929"}], "meta": {"var": {}, "label": "multf"}, "name": "multf1", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 0, "value": 216.0, "bLabelHidden": false, "uuid": "c4ef0346-b8a5-46e9-b1c7-02cbbeee020c"}], "y": 5128.0, "x": 4520.0, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "multf", "uuid": "c0348fde-1ccb-42fd-a805-a94a9ec9709a"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "f", "dataType": 0, "value": 9.0, "bLabelHidden": false, "uuid": "88e627e8-f1ec-4085-9463-9070e4c6d4c9"}], "meta": {"var": {}, "label": "makeFloat"}, "name": "makeFloat2", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 0, "value": 9.0, "bLabelHidden": false, "uuid": "9d8169ec-165f-469c-af34-aaadea496d9f"}], "y": 5148.0, "x": 4300.0, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "makeFloat", "uuid": "e148a323-2758-46c1-a77c-b376482e7a68"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "entity", "dataType": 2, "value": "False", "bLabelHidden": false, "uuid": "1a4dfd62-9076-47f5-8a28-b44be42a3a4b"}, {"direction": 0, "bDirty": false, "name": "inExec", "dataType": 5, "value": null, "bLabelHidden": true, "uuid": "e43e6cab-e79d-47a9-bc02-fcda25aab5ae"}], "meta": {"var": {}, "label": "pyprint"}, "name": "pyprint", "outputs": [{"direction": 1, "bDirty": false, "name": "outExec", "dataType": 5, "value": null, "bLabelHidden": true, "uuid": "c77652bc-deac-4994-b2ae-c4d19a6977dd"}], "y": 4818.0, "x": 5040.0, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "pyprint", "uuid": "2ed1aec4-073f-4ebf-8497-380904bc1f98"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "a", "dataType": 0, "value": 6.0, "bLabelHidden": false, "uuid": "c2ff3564-dbf7-438d-b1cd-893e3c74736c"}, {"direction": 0, "bDirty": false, "name": "b", "dataType": 0, "value": 9.0, "bLabelHidden": false, "uuid": "7b1b68cc-f83a-492d-840c-8d0bd288d034"}], "meta": {"var": {}, "label": "multf"}, "name": "multf", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 0, "value": 54.0, "bLabelHidden": false, "uuid": "3f2dc4e0-30f1-4eaf-86f2-e2999493175d"}], "y": 5128.0, "x": 4440.0, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "multf", "uuid": "f22d9ac7-5c40-43f9-8d24-e463faef9469"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "b", "dataType": 3, "value": false, "bLabelHidden": false, "uuid": "33594edd-065a-4428-ae87-23e3099e9aa9"}], "meta": {"var": {}, "label": "boolToString"}, "name": "boolToString", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 2, "value": "False", "bLabelHidden": false, "uuid": "ca0e4595-4e76-4762-8b91-07caf1152470"}], "y": 4978.0, "x": 4840.0, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "boolToString", "uuid": "5722d97e-721c-44d8-a264-634dae20cc26"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "f", "dataType": 0, "value": 6.0, "bLabelHidden": false, "uuid": "78deb32c-68a6-4a25-8f3c-cc0de239e2b8"}], "meta": {"var": {}, "label": "makeFloat"}, "name": "makeFloat", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 0, "value": 6.0, "bLabelHidden": false, "uuid": "1a79837b-3d16-4c8e-bd60-3f79db95ad48"}], "y": 4988.0, "x": 4300.0, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "makeFloat", "uuid": "9ce91191-a335-4a18-86a8-54793d9f3231"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "a", "dataType": 0, "value": -152.0, "bLabelHidden": false, "uuid": "6aeab047-956e-4a84-a519-13c1c4272fe4"}, {"direction": 0, "bDirty": false, "name": "b", "dataType": 0, "value": 0.0, "bLabelHidden": false, "uuid": "67ddf4db-b394-4c75-9781-9d2a03d0147d"}], "meta": {"var": {}, "label": "isgreaterf"}, "name": "isgreaterf", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 3, "value": false, "bLabelHidden": false, "uuid": "60469c1c-1f3d-4ef4-a81d-f31e084e211d"}], "y": 4978.0, "x": 4720.0, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "isgreaterf", "uuid": "02103e8f-8360-4e46-9ee1-12cd16071d40"}, {"inputs": [], "meta": {"var": {}, "deltaTime": 0.2, "label": "call"}, "name": "call", "outputs": [{"direction": 1, "bDirty": false, "name": "OUT", "dataType": 5, "value": null, "bLabelHidden": false, "uuid": "db745844-492d-4c6c-badd-2e0a2fee09d9"}], "y": 4818.0, "x": 4450.0, "computeCode": "def compute(self):\n    self.out.call()\n", "type": "call", "uuid": "d3eecb09-a8bf-4247-8702-d952c67dc6aa"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "a", "dataType": 0, "value": 64.0, "bLabelHidden": false, "uuid": "85964858-4a4d-4132-874e-ef58b88bc25a"}, {"direction": 0, "bDirty": false, "name": "b", "dataType": 0, "value": 216.0, "bLabelHidden": false, "uuid": "261ca816-f62c-4873-9584-68a07881f16b"}], "meta": {"var": {}, "label": "substractf"}, "name": "substractf", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 0, "value": -152.0, "bLabelHidden": false, "uuid": "48b4f16e-9ced-4c9b-aa0d-7fc587211c14"}], "y": 4978.0, "x": 4580.0, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "substractf", "uuid": "bd8778b5-d80f-4316-a3f5-94b26c6d1eb7"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "f", "dataType": 0, "value": -8.0, "bLabelHidden": false, "uuid": "4b993a5d-ba4b-4d64-b332-1087ef0ce45a"}], "meta": {"var": {}, "label": "makeFloat"}, "name": "makeFloat1", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 0, "value": -8.0, "bLabelHidden": false, "uuid": "35a3e8c0-e17f-430e-96a6-d1c1b403c874"}], "y": 5068.0, "x": 4300.0, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "makeFloat", "uuid": "1b9234d3-ea4d-4339-b779-d2b06ee9d039"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "a", "dataType": 0, "value": -8.0, "bLabelHidden": false, "uuid": "c823a85e-4c26-4f87-9200-933ee2fa8edb"}, {"direction": 0, "bDirty": false, "name": "b", "dataType": 0, "value": -8.0, "bLabelHidden": false, "uuid": "55bb78b7-19fc-4871-af63-f1be211cc23d"}], "meta": {"var": {}, "label": "multf"}, "name": "multf2", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 0, "value": 64.0, "bLabelHidden": false, "uuid": "ed6506a9-8a65-4365-8aa5-5dc4269031fe"}], "y": 4978.0, "x": 4470.0, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "multf", "uuid": "d770a585-6914-4d40-a499-e11ce8f3a555"}, {"inputs": [], "meta": {"var": {}, "commentNode": {"color": [0, 0, 0, 80], "h": 72.0, "labelHeight": 21.0, "w": 160.0, "text": "4 * a * c"}, "label": "4 * a * c"}, "name": "commentNode1", "outputs": [], "y": 5098.0, "x": 4430.0, "computeCode": "def compute(self):\n    '''\n    node calculations here\n    '''\n    # getting data from inputs\n    # do stuff\n    # write data to outputs\n    return\n", "type": "commentNode", "uuid": "bb1cc121-a9c5-4493-b9a9-0ffb62681a08"}, {"inputs": [], "meta": {"var": {}, "commentNode": {"color": [0, 0, 0, 80], "h": 212.0, "labelHeight": 21.0, "w": 110.0, "text": "A B and C"}, "label": "A B and C"}, "name": "commentNode", "outputs": [], "y": 4958.0, "x": 4290.0, "computeCode": "def compute(self):\n    '''\n    node calculations here\n    '''\n    # getting data from inputs\n    # do stuff\n    # write data to outputs\n    return\n", "type": "commentNode", "uuid": "687d4b66-44be-47a0-9a78-21862d731a12"}], "edges": [{"sourceName": "isgreaterf.out", "sourceUUID": "60469c1c-1f3d-4ef4-a81d-f31e084e211d", "destinationName": "boolToString.b", "destinationUUID": "33594edd-065a-4428-ae87-23e3099e9aa9", "uuid": "c2ce88b3-bc8e-4ede-9501-c273d911267b"}, {"sourceName": "makeFloat2.out", "sourceUUID": "9d8169ec-165f-469c-af34-aaadea496d9f", "destinationName": "multf.b", "destinationUUID": "7b1b68cc-f83a-492d-840c-8d0bd288d034", "uuid": "185cd97f-3bb9-4003-975f-863ae33b4e7e"}, {"sourceName": "multf1.out", "sourceUUID": "c4ef0346-b8a5-46e9-b1c7-02cbbeee020c", "destinationName": "substractf.b", "destinationUUID": "261ca816-f62c-4873-9584-68a07881f16b", "uuid": "783bb0fd-9ddf-4142-8911-72e9054f4d62"}, {"sourceName": "boolToString.out", "sourceUUID": "ca0e4595-4e76-4762-8b91-07caf1152470", "destinationName": "pyprint.entity", "destinationUUID": "1a4dfd62-9076-47f5-8a28-b44be42a3a4b", "uuid": "61c6c538-4720-426b-8dca-522866bdbbdd"}, {"sourceName": "call.OUT", "sourceUUID": "db745844-492d-4c6c-badd-2e0a2fee09d9", "destinationName": "pyprint.inExec", "destinationUUID": "e43e6cab-e79d-47a9-bc02-fcda25aab5ae", "uuid": "2e61c1a5-7150-42dc-b31d-03d6f0b99f31"}, {"sourceName": "makeFloat1.out", "sourceUUID": "35a3e8c0-e17f-430e-96a6-d1c1b403c874", "destinationName": "multf2.b", "destinationUUID": "55bb78b7-19fc-4871-af63-f1be211cc23d", "uuid": "55035cf8-b09f-4d3b-9d5e-6356ca057603"}, {"sourceName": "multf2.out", "sourceUUID": "ed6506a9-8a65-4365-8aa5-5dc4269031fe", "destinationName": "substractf.a", "destinationUUID": "85964858-4a4d-4132-874e-ef58b88bc25a", "uuid": "5f630a43-aab9-47cf-9136-710f3ba242bb"}, {"sourceName": "multf.out", "sourceUUID": "3f2dc4e0-30f1-4eaf-86f2-e2999493175d", "destinationName": "multf1.a", "destinationUUID": "35f7a651-c6be-48cc-9383-6aa7b540ea7c", "uuid": "edc03b3f-162b-4881-be7b-0277be4bb237"}, {"sourceName": "makeFloat.out", "sourceUUID": "1a79837b-3d16-4c8e-bd60-3f79db95ad48", "destinationName": "multf.a", "destinationUUID": "c2ff3564-dbf7-438d-b1cd-893e3c74736c", "uuid": "d2d6f959-e89e-4763-97dc-69bfb5c2be34"}, {"sourceName": "substractf.out", "sourceUUID": "48b4f16e-9ced-4c9b-aa0d-7fc587211c14", "destinationName": "isgreaterf.a", "destinationUUID": "6aeab047-956e-4a84-a519-13c1c4272fe4", "uuid": "a954bc2e-ca61-4777-b3bd-f4c8fafdc113"}, {"sourceName": "makeFloat1.out", "sourceUUID": "35a3e8c0-e17f-430e-96a6-d1c1b403c874", "destinationName": "multf2.a", "destinationUUID": "c823a85e-4c26-4f87-9200-933ee2fa8edb", "uuid": "14e8c401-8d6b-46ea-974a-5a7e2e74c533"}], "variables": [{"type": 3, "name": "NewVar", "value": true, "uuid": "db2358f7-f537-4730-a904-ac98e9bb13e9"}]}}